# Java 程序员必须掌握的8大排序算法
本文主要详解了Java语言的8大排序的基本思想以及实例解读，详细请看下文

## 8种排序之间的关系
//插入图片

## 一、直接插入排序
1. 基本思想：
在要排序的一组数中，假设前面(n-1)[n>=2] 个数已经是排好顺序的，现在要把第n个数插到前面的有序数中，使得这n个数也是排好顺序的。如此反复循环，直到全部排好顺序。
2. 实例：
//插入图片
3. 代码实现：
```[Java]
public class InsertionSorting {

    public static void main(String[] args) {
        int a[] = { 49, 38, 65, 97, 76, 13, 27, 49, 78, 34, 12, 64, 5, 4, 62, 99, 98, 54, 56, 17, 18, 23, 34, 15, 35,
                25, 53, 51 };

        int temp = 0;
        for (int i = 1; i < a.length; i++) {
            int j;
            temp = a[i];
            
            for (j = i - 1; j >= 0 && temp < a[j]; j--)
                a[j + 1] = a[j]; // 将大于temp的值整体向后移一个单位
            
            a[j + 1] = temp;
        }

        for (int i = 0; i < a.length; i++)
            System.out.print(a[i] + " ");
    }
}
```

## 二、希尔排序（最小增量排序）
1. 基本思想：
算法先将要排序的一组数按某个增量d（n/2,n为要排序数的个数）分成若干组，每组中记录的下标相差d.对每组中全部元素进行直接插入排序，然后再用一个较小的增量（d/2）对它进行分组，在每组中再进行直接插入排序。当增量减到1时，进行直接插入排序后，排序完成。
2. 实例：
//插入图片
3. 代码实现：
```[Java]
public class ShellSort {

    public static void main(String[] args) {
        int a[] = { 1, 54, 6, 3, 78, 34, 12, 45, 56, 100 };
        double d1 = a.length;
        int temp = 0;
        while (true) {
            d1 = Math.ceil(d1 / 2);
            int d = (int) d1; // 分组的间隔
            // 遍历每组
            for (int x = 0; x < d; x++) {
                for (int i = x + d; i < a.length; i += d) {
                    int j;
                    temp = a[i];
                    // 每组中进行直接插入排序
                    for (j = i - d; j >= 0 && temp < a[j]; j -= d)
                        a[j + d] = a[j];
                    a[j + d] = temp;
                }
            }
            // 当间隔为1时，就已经排序好了
            if (d == 1)
                break;
        }

        for (int i = 0; i < a.length; i++)
            System.out.print(a[i] + " ");
    }
}
```

## 三、简单选择排序
1. 基本思想：
在要排序的一组数中，选出最小的一个数与第一个位置的数交换；然后在剩下的数当中再找最小的与第二个位置的数交换，如此循环到倒数第二个数和最后一个数比较为止。
2. 实例
// 插入图片
3. 代码实现：
```[Java]
public class SelectionSort {

    public static void main(String[] args) {
        int a[] = { 1, 54, 6, 3, 78, 34, 12, 45 };
        for (int i = 0; i < a.length; i++) {
            int min = a[i];
            int t = i;
            for (int j = i + 1; j < a.length; j++) {
                if (min > a[j]) {
                    min = a[j];
                    t = j;
                }
            }
            a[t] = a[i];
            a[i] = min;
        }
        for (int i = 0; i < a.length; i++)
            System.out.print(a[i] + " ");
    }
}
```
